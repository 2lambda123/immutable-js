{"pageProps":{"versions":["v4.3.1","v3.8.2","latest@main"],"version":"v4.3.1","def":{"qualifiedName":"hash","call":{"name":"hash","label":"hash()","id":"hash()","doc":{"synopsis":"<p>The <code><a href=\"/docs/v4.3.1/hash()\">hash()</a></code> function is an important part of how Immutable determines if\ntwo values are equivalent and is used to determine how to store those\nvalues. Provided with any value, <code><a href=\"/docs/v4.3.1/hash()\">hash()</a></code> will return a 31-bit integer.</p>\n","description":"<p>When designing Objects which may be equal, it&#39;s important that when a\n<code><span class=\"token punctuation\" >.</span>equals<span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span></code> method returns true, that both values <code><span class=\"token punctuation\" >.</span>hashCode<span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span></code> method\nreturn the same value. <code><a href=\"/docs/v4.3.1/hash()\">hash()</a></code> may be used to produce those values.</p>\n<p>For non-Immutable Objects that do not provide a <code><span class=\"token punctuation\" >.</span>hashCode<span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >)</span></code> functions\n(including plain Objects, plain Arrays, Date objects, etc), a unique hash\nvalue will be created for each <em>instance</em>. That is, the create hash\nrepresents referential equality, and not value equality for Objects. This\nensures that if that Object is mutated over time that its hash code will\nremain consistent, allowing Objects to be used as keys and values in\nImmutable.js collections.</p>\n<p>Note that <code><a href=\"/docs/v4.3.1/hash()\">hash()</a></code> attempts to balance between speed and avoiding\ncollisions, however it makes no attempt to produce secure hashes.</p>\n<p><em>New in Version 4.0</em></p>\n","notes":[]},"signatures":[{"line":5270,"params":[{"name":"value","type":{"k":2}}],"type":{"k":6}}],"url":"/docs/v4.3.1/hash()"},"label":"hash()","url":"/docs/v4.3.1/hash()"},"sidebarLinks":[{"label":"List","url":"/docs/v4.3.1/List"},{"label":"Map","url":"/docs/v4.3.1/Map"},{"label":"OrderedMap","url":"/docs/v4.3.1/OrderedMap"},{"label":"Set","url":"/docs/v4.3.1/Set"},{"label":"OrderedSet","url":"/docs/v4.3.1/OrderedSet"},{"label":"Stack","url":"/docs/v4.3.1/Stack"},{"label":"Range()","url":"/docs/v4.3.1/Range()"},{"label":"Repeat()","url":"/docs/v4.3.1/Repeat()"},{"label":"Record","url":"/docs/v4.3.1/Record"},{"label":"Record.Factory","url":"/docs/v4.3.1/Record.Factory"},{"label":"Seq","url":"/docs/v4.3.1/Seq"},{"label":"Seq.Keyed","url":"/docs/v4.3.1/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v4.3.1/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v4.3.1/Seq.Set"},{"label":"Collection","url":"/docs/v4.3.1/Collection"},{"label":"Collection.Keyed","url":"/docs/v4.3.1/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v4.3.1/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v4.3.1/Collection.Set"},{"label":"ValueObject","url":"/docs/v4.3.1/ValueObject"},{"label":"fromJS()","url":"/docs/v4.3.1/fromJS()"},{"label":"is()","url":"/docs/v4.3.1/is()"},{"label":"hash()","url":"/docs/v4.3.1/hash()"},{"label":"isImmutable()","url":"/docs/v4.3.1/isImmutable()"},{"label":"isCollection()","url":"/docs/v4.3.1/isCollection()"},{"label":"isKeyed()","url":"/docs/v4.3.1/isKeyed()"},{"label":"isIndexed()","url":"/docs/v4.3.1/isIndexed()"},{"label":"isAssociative()","url":"/docs/v4.3.1/isAssociative()"},{"label":"isOrdered()","url":"/docs/v4.3.1/isOrdered()"},{"label":"isValueObject()","url":"/docs/v4.3.1/isValueObject()"},{"label":"isSeq()","url":"/docs/v4.3.1/isSeq()"},{"label":"isList()","url":"/docs/v4.3.1/isList()"},{"label":"isMap()","url":"/docs/v4.3.1/isMap()"},{"label":"isOrderedMap()","url":"/docs/v4.3.1/isOrderedMap()"},{"label":"isStack()","url":"/docs/v4.3.1/isStack()"},{"label":"isSet()","url":"/docs/v4.3.1/isSet()"},{"label":"isOrderedSet()","url":"/docs/v4.3.1/isOrderedSet()"},{"label":"isRecord()","url":"/docs/v4.3.1/isRecord()"},{"label":"get()","url":"/docs/v4.3.1/get()"},{"label":"has()","url":"/docs/v4.3.1/has()"},{"label":"remove()","url":"/docs/v4.3.1/remove()"},{"label":"set()","url":"/docs/v4.3.1/set()"},{"label":"update()","url":"/docs/v4.3.1/update()"},{"label":"getIn()","url":"/docs/v4.3.1/getIn()"},{"label":"hasIn()","url":"/docs/v4.3.1/hasIn()"},{"label":"removeIn()","url":"/docs/v4.3.1/removeIn()"},{"label":"setIn()","url":"/docs/v4.3.1/setIn()"},{"label":"updateIn()","url":"/docs/v4.3.1/updateIn()"},{"label":"merge()","url":"/docs/v4.3.1/merge()"},{"label":"mergeWith()","url":"/docs/v4.3.1/mergeWith()"},{"label":"mergeDeep()","url":"/docs/v4.3.1/mergeDeep()"},{"label":"mergeDeepWith()","url":"/docs/v4.3.1/mergeDeepWith()"}]},"__N_SSG":true}